/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BattleShipGameApplication;

import BattleShip.BattleShipComputerPlayer;
import BattleShip.BattleShipConstants;
import BattleShip.BattleShipGame;
import BattleShip.BattleShipHumanPlayer;
import BattleShip.BattleShipPlayer;
import BattleShip.EBattleShipGameType;
import Misc.Constants;
import Misc.MessageBox;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author WAFA
 */
public class MainPanel2 extends javax.swing.JPanel
{
    public MainPanel2()
    {
        initComponents();
        setBackground(new Color(0, 0, 0, 128));
        cbxGridSize.addItemListener(new ItemListener()
        {
            @Override
            public void itemStateChanged(ItemEvent e)
            {
                UpdateRequiredShipsComboBox(e.getItem().toString());
            }
        });
        UpdateRequiredShipsComboBox(cbxGridSize.getSelectedItem().toString());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlMainPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton(new ImageIcon("Assets\\200x50.jpg"));
        btnCancel = new javax.swing.JButton(new ImageIcon("Assets\\150x50.jpg"));
        txfPlayer2Name = new javax.swing.JTextField();
        lblRquiredShipsCount = new javax.swing.JLabel();
        txfPlayer1Name = new javax.swing.JTextField();
        lblGridSize = new javax.swing.JLabel();
        lblPlayer2Name = new javax.swing.JLabel();
        lblSettings = new javax.swing.JLabel();
        cbxRequiredShipsCount = new javax.swing.JComboBox<>();
        cbxGridSize = new javax.swing.JComboBox<>();
        lblPlayer1Name1 = new javax.swing.JLabel();

        setBackground(Color.white);

        pnlMainPanel1.setBackground(new Color(0,0,0,0));
        pnlMainPanel1.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        pnlMainPanel1.setMaximumSize(new java.awt.Dimension(400, 350));
        pnlMainPanel1.setLayout(new java.awt.GridBagLayout());

        btnSave.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setIconTextGap(0);
        btnSave.setMaximumSize(new java.awt.Dimension(200, 50));
        btnSave.setMinimumSize(new java.awt.Dimension(200, 50));
        btnSave.setPreferredSize(new java.awt.Dimension(80, 50));
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(btnSave, gridBagConstraints);

        btnCancel.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setIconTextGap(0);
        btnCancel.setMaximumSize(new java.awt.Dimension(150, 50));
        btnCancel.setMinimumSize(new java.awt.Dimension(150, 50));
        btnCancel.setPreferredSize(new java.awt.Dimension(80, 50));
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(btnCancel, gridBagConstraints);

        txfPlayer2Name.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        txfPlayer2Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txfPlayer2Name.setMaximumSize(new java.awt.Dimension(150, 30));
        txfPlayer2Name.setMinimumSize(new java.awt.Dimension(150, 30));
        txfPlayer2Name.setPreferredSize(new java.awt.Dimension(80, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(txfPlayer2Name, gridBagConstraints);

        lblRquiredShipsCount.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lblRquiredShipsCount.setForeground(new java.awt.Color(255, 255, 255));
        lblRquiredShipsCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRquiredShipsCount.setText("Required ships count");
        lblRquiredShipsCount.setMaximumSize(new java.awt.Dimension(200, 30));
        lblRquiredShipsCount.setMinimumSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(lblRquiredShipsCount, gridBagConstraints);

        txfPlayer1Name.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        txfPlayer1Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txfPlayer1Name.setMaximumSize(new java.awt.Dimension(150, 30));
        txfPlayer1Name.setMinimumSize(new java.awt.Dimension(150, 30));
        txfPlayer1Name.setPreferredSize(new java.awt.Dimension(80, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(txfPlayer1Name, gridBagConstraints);

        lblGridSize.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lblGridSize.setForeground(new java.awt.Color(255, 255, 255));
        lblGridSize.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGridSize.setText("Grid size");
        lblGridSize.setMaximumSize(new java.awt.Dimension(200, 30));
        lblGridSize.setMinimumSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(lblGridSize, gridBagConstraints);

        lblPlayer2Name.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lblPlayer2Name.setForeground(new java.awt.Color(255, 255, 255));
        lblPlayer2Name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPlayer2Name.setText("Player 2 name");
        lblPlayer2Name.setMaximumSize(new java.awt.Dimension(200, 30));
        lblPlayer2Name.setMinimumSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(lblPlayer2Name, gridBagConstraints);

        lblSettings.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lblSettings.setForeground(new java.awt.Color(255, 255, 255));
        lblSettings.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSettings.setText("Settings :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(lblSettings, gridBagConstraints);

        cbxRequiredShipsCount.setBackground(Color.white);
        cbxRequiredShipsCount.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        cbxRequiredShipsCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "5", "10" }));
        cbxRequiredShipsCount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbxRequiredShipsCount.setMaximumSize(new java.awt.Dimension(150, 30));
        cbxRequiredShipsCount.setMinimumSize(new java.awt.Dimension(150, 30));
        cbxRequiredShipsCount.setPreferredSize(new java.awt.Dimension(80, 50));
        cbxRequiredShipsCount.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
        {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
            {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
            {
                PopupMenuVisibiltyChanged(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
            {
                PopupMenuVisibiltyChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(cbxRequiredShipsCount, gridBagConstraints);

        cbxGridSize.setBackground(Color.white);
        cbxGridSize.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        cbxGridSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Large" }));
        cbxGridSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbxGridSize.setMaximumSize(new java.awt.Dimension(150, 30));
        cbxGridSize.setMinimumSize(new java.awt.Dimension(150, 30));
        cbxGridSize.setPreferredSize(new java.awt.Dimension(80, 50));
        cbxGridSize.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
        {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
            {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
            {
                PopupMenuVisibiltyChanged(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
            {
                PopupMenuVisibiltyChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(cbxGridSize, gridBagConstraints);

        lblPlayer1Name1.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lblPlayer1Name1.setForeground(new java.awt.Color(255, 255, 255));
        lblPlayer1Name1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPlayer1Name1.setText("Player 1 name");
        lblPlayer1Name1.setMaximumSize(new java.awt.Dimension(200, 30));
        lblPlayer1Name1.setMinimumSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 11, 6);
        pnlMainPanel1.add(lblPlayer1Name1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMainPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMainPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        SaveSettings();
        GameEngine.mainMenuFrame.DisplayMainPanel1();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        GameEngine.mainMenuFrame.DisplayMainPanel1();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void PopupMenuVisibiltyChanged(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_PopupMenuVisibiltyChanged
    {//GEN-HEADEREND:event_PopupMenuVisibiltyChanged
        if (GameEngine.mainMenuFrame != null)
            GameEngine.mainMenuFrame.repaint();
        repaint();
    }//GEN-LAST:event_PopupMenuVisibiltyChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancel;
    public javax.swing.JButton btnSave;
    public javax.swing.JComboBox<String> cbxGridSize;
    public javax.swing.JComboBox<String> cbxRequiredShipsCount;
    private javax.swing.JLabel lblGridSize;
    private javax.swing.JLabel lblPlayer1Name1;
    private javax.swing.JLabel lblPlayer2Name;
    private javax.swing.JLabel lblRquiredShipsCount;
    private javax.swing.JLabel lblSettings;
    public javax.swing.JPanel pnlMainPanel1;
    private javax.swing.JTextField txfPlayer1Name;
    private javax.swing.JTextField txfPlayer2Name;
    // End of variables declaration//GEN-END:variables
    private void SaveSettings()
    {
        GameEngine.settings.replace(BattleShipConstants.Player1NameKey, txfPlayer1Name.getText());
        GameEngine.settings.replace(BattleShipConstants.Player2NameKey, txfPlayer2Name.getText());
        GameEngine.settings.replace(BattleShipConstants.RequiredShipsCountKey, Integer.parseInt(cbxRequiredShipsCount.getSelectedItem().toString()));
        int RowsCount = 0;
        int ColumnsCount = 0;
        int CellWidth = 0;
        int CellHeight = 0;
        switch (cbxGridSize.getSelectedItem().toString())
        {
            case "Small":
                RowsCount = BattleShipConstants.SmallRowsCount;
                ColumnsCount = BattleShipConstants.SmallColumnsCount;
                CellWidth = BattleShipConstants.SmallCellWidth;
                CellHeight = BattleShipConstants.SmallCellHeight;
                break;
            case "Large":
                RowsCount = BattleShipConstants.LargeRowsCount;
                ColumnsCount = BattleShipConstants.LargeColumnsCount;
                CellWidth = BattleShipConstants.LargeCellWidth;
                CellHeight = BattleShipConstants.LargeCellHeight;
                break;
        }
        GameEngine.settings.replace(BattleShipConstants.RowsCountKey, RowsCount);
        GameEngine.settings.replace(BattleShipConstants.ColumnsCountKey, ColumnsCount);
        GameEngine.settings.replace(BattleShipConstants.CellWidthKey, CellWidth);
        GameEngine.settings.replace(BattleShipConstants.CellHeightKey, CellHeight);
    }
    public void FillSettings()
    {
        txfPlayer1Name.setText(GameEngine.settings.get(BattleShipConstants.Player1NameKey).toString());
        txfPlayer2Name.setText(GameEngine.settings.get(BattleShipConstants.Player2NameKey).toString());
    }
    public void UpdateRequiredShipsComboBox(String currentSelectedItem)
    {
        cbxRequiredShipsCount.removeAllItems();
        cbxRequiredShipsCount.addItem(BattleShipConstants.SmallRequiredShipsCount + "");
        if (currentSelectedItem.equals("Large"))
        {
            cbxRequiredShipsCount.addItem(BattleShipConstants.MediumRequiredShipsCount + "");
            cbxRequiredShipsCount.addItem(BattleShipConstants.LargeRequiredShipsCount + "");
        }
    }
}
